generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider                  = "prisma-erd-generator"
//   theme                     = "neutral"
//   includeRelationFromFields = true
// }

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  password  String
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  messages  Message[]
  chatrooms Chatroom[]
  followers User[]     @relation("follows")
  following User[]     @relation("follows")
}

model Chatroom {
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
}

model Conversation {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  messages  Message[]
  chatrooms Chatroom[]
}

model Message {
  id             String       @id @default(uuid())
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String
  user           User         @relation(fields: [userId], references: [id])
  userId         String
}
